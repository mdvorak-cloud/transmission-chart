name: Build

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - main
  release:
    types:
      - published

env:
  NAME: transmission

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      value: ${{ steps.version.outputs.value }}
    steps:
      - name: Get the version
        id: version
        run: |
          if ${{ startsWith(github.ref, 'refs/tags/v') }}; then
            echo "::set-output name=value::${GITHUB_REF#refs/*/v}"
          else
            echo "::set-output name=value::0.0.0-$(date +"%Y%m%d%H%M%S")-${GITHUB_SHA::8}"
          fi

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [ version ]
    env:
      VERSION: ${{ needs.version.outputs.value }}
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Lint helm
      - name: Helm lint
        run: helm lint .

      # Prepare env
      - name: Create kind cluster
        uses: helm/kind-action@v1.1.0

      # Deploy
      - name: Helm install
        run: |
          kubectl apply -f ci/fake-secret.yaml
          kubectl apply -f https://raw.githubusercontent.com/helm/charts/master/stable/prometheus-operator/crds/crd-servicemonitor.yaml
          helm install "${NAME}" . --set transmission.settings.blocklist-url="https://github.com/Naunter/BT_BlockLists/raw/master/bt_blocklists.gz"

      # Test deployment
      - name: Wait
        id: wait
        run: |
          kubectl wait --for=condition=available --timeout=30s "deployment/${NAME}"
        continue-on-error: true

      - name: Print logs
        if: steps.wait.outcome == 'failure'
        run: |
          kubectl logs "deployment/${NAME}"

      - name: Helm test
        run: |
          helm test "${NAME}" --logs
          kubectl logs "deployment/${NAME}"

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [ version, test ] # Don't publish if test fails
    env:
      VERSION: ${{ needs.version.outputs.value }}
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Release Helm
      - name: Set Helm version
        run: |
          mkdir -p build/charts
          cp -r . "build/charts/${NAME}"
          sed -i "s/^version:.*/version: ${VERSION}/g" "build/charts/${NAME}/Chart.yaml"

      - name: Publish Helm chart
        uses: stefanprodan/helm-gh-pages@v1.3.0
        with:
          token: ${{ github.token }}
          charts_dir: build/charts/
